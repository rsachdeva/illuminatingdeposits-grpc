apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: default
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/component: mongodb
spec:
  serviceName: "mongodb"
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: mongodb
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/instance: mongodb
        app.kubernetes.io/component: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:4.4.2-bionic
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: mongodb
              containerPort: 27017
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: datadir
              mountPath: /var/lib/mongodb/data
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: mongodb
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongodb
  namespace: default
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/component: mongodb
spec:
  storageClassName: hostpath
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "2Gi"
  selector:
    matchLabels:
      app: mongodb-pv
---
apiVersion: v1
kind: Service
metadata:
  name: depositsmongodb
  namespace: default
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/component: mongodb
spec:
  type: NodePort
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
      nodePort: 30010
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/component: mongodb
